<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cxf="http://cxf.apache.org/core"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://cxf.apache.org/core
		   http://cxf.apache.org/schemas/core.xsd
		   http://cxf.apache.org/jaxws 
		   http://cxf.apache.org/schemas/jaxws.xsd
		   http://cxf.apache.org/jaxrs
		   http://cxf.apache.org/schemas/jaxrs.xsd
           ">
	<context:annotation-config />
	<context:component-scan base-package="com.yz" />
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 如何取得Spring管理的bean   -->
	<bean class="com.yz.util.SpringContextHolder" lazy-init="false" />
	
	<!-- 线程池 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="keepAliveSeconds" value="200" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>

	<!-- 服务已经由compent自动注入,显然是不行滴 -->
	<bean id="judgeService"
		class="com.yz.service.imp.JudgeServiceImp">
	</bean>

	<!-- 要做的工作 -->
	<bean id="helloJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="judgeService"></property>
		<property name="targetMethod" value="doJob"></property>
	</bean>
	<!-- 调度工作 -->
	<bean id="cronUserTigger"
		class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="helloJob"></property>
		<property name="cronExpression" value="0 25 12 * * ? "></property>
	</bean>

	<!-- 启动工作 -->
	<bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronUserTigger"></ref>
			</list>
		</property>
	</bean>


	<!-- 将多个配置文件位置放到列表中 -->
	<bean id="propertyResources" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:message.properties</value>
			</list>
		</constructor-arg>
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" ref="propertyResources" />
	</bean>

	<bean id="authObject" destroy-method="close"
		class="com.yz.auth.AuthObject">
		<property name="authURL" value="${authURL}" />
		<property name="appId" value="${appId}" />
		<property name="attrType" value="${attrType}" />
		<property name="attributes" value="${attributes}" />
		<property name="fileRoot" value="${fileRoot}" />
	</bean>


	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minEvictableIdleTimeMillis"
			value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery"
			value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis"
			value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun"
			value="${jdbc.numTestsPerEvictionRun}" />
		<property name="removeAbandoned"
			value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout"
			value="${jdbc.removeAbandonedTimeout}" />
	</bean>



	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.yz.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<aop:config>
		<aop:pointcut id="bussinessService"
			expression="execution(public * com.yz.service.*.*(..))" />
		<aop:advisor pointcut-ref="bussinessService"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="process*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
</beans>